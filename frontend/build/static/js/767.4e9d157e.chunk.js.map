{"version":3,"file":"static/js/767.4e9d157e.chunk.js","mappings":"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","sources":["components/course/MathLessonModule.jsx","redux/actions/alert.js","redux/actions/lessonM.js","redux/actions/progress.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getLessons } from '../../redux/actions/lessonM';\r\nimport { createOrUpdateProgress } from '../../redux/actions/progress';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MathLessonModule = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const { lessons } = useSelector(state => state.Lessons);\r\n  const { progress } = useSelector(state => state.Progress || { progress: [] });\r\n\r\n  const [lesson, setLesson] = useState(null);\r\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0);\r\n  const [xp, setXp] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [progressSaved, setProgressSaved] = useState(false);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [totalAttempts, setTotalAttempts] = useState(0);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  // Estados para la pizarra\r\n  const [showWhiteboard, setShowWhiteboard] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const [currentColor, setCurrentColor] = useState('#2563eb');\r\n  const [currentSize, setCurrentSize] = useState(3);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLessons());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const selected = lessons.find(l => l.course === parseInt(id));\r\n    if (selected) setLesson(selected);\r\n  }, [lessons, id]);\r\n\r\n  const currentExercise = lesson?.exercises?.[currentExerciseIndex];\r\n\r\n  const handleSubmit = () => {\r\n    if (!currentExercise || !userAnswer.trim()) return;\r\n\r\n    setTotalAttempts(prev => prev + 1);\r\n\r\n    const correct = userAnswer.trim() === currentExercise.correct_answer;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n\r\n    if (correct) {\r\n      setCorrectAnswers(prev => prev + 1);\r\n      setXp(prev => prev + lesson.xp_value);\r\n      setTimeout(() => {\r\n        setShowFeedback(false);\r\n        setUserAnswer('');\r\n        setCurrentExerciseIndex(prev => prev + 1);\r\n      }, 2000);\r\n    } else {\r\n      setTimeout(() => {\r\n        setShowFeedback(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const handleChoiceClick = (opt) => {\r\n    setTotalAttempts(prev => prev + 1);\r\n\r\n    const correct = opt === currentExercise.correct_answer;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n\r\n    if (correct) {\r\n      setCorrectAnswers(prev => prev + 1);\r\n      setXp(prev => prev + lesson.xp_value);\r\n      setTimeout(() => {\r\n        setShowFeedback(false);\r\n        setCurrentExerciseIndex(prev => prev + 1);\r\n      }, 2000);\r\n    } else {\r\n      setTimeout(() => {\r\n        setShowFeedback(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  const progressValue = lesson?.exercises?.length\r\n    ? Math.round((currentExerciseIndex / lesson.exercises.length) * 100)\r\n    : 0;\r\n\r\n  useEffect(() => {\r\n    if (lesson && currentExerciseIndex >= lesson.exercises.length && !progressSaved) {\r\n      const now = new Date().toISOString();\r\n      const accuracy = totalAttempts > 0 ? correctAnswers / totalAttempts : 0;\r\n\r\n      dispatch(createOrUpdateProgress(lesson.id, {\r\n        completed: true,\r\n        earned_xp: xp,\r\n        accuracy: accuracy,\r\n        retries: totalAttempts,\r\n        timestamp: now\r\n      }));\r\n\r\n      setProgressSaved(true);\r\n    }\r\n  }, [lesson, currentExerciseIndex, xp, totalAttempts, correctAnswers, progressSaved, dispatch]);\r\n\r\n  // Funciones para la pizarra\r\n  const getCoordinates = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n\r\n    if (e.touches) {\r\n      return {\r\n        x: (e.touches[0].clientX - rect.left) * scaleX,\r\n        y: (e.touches[0].clientY - rect.top) * scaleY\r\n      };\r\n    } else {\r\n      return {\r\n        x: (e.clientX - rect.left) * scaleX,\r\n        y: (e.clientY - rect.top) * scaleY\r\n      };\r\n    }\r\n  };\r\n\r\n  const startDrawing = (e) => {\r\n    e.preventDefault();\r\n    setIsDrawing(true);\r\n    const coords = getCoordinates(e);\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.beginPath();\r\n    ctx.moveTo(coords.x, coords.y);\r\n  };\r\n\r\n  const draw = (e) => {\r\n    e.preventDefault();\r\n    if (!isDrawing) return;\r\n\r\n    const coords = getCoordinates(e);\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.lineTo(coords.x, coords.y);\r\n    ctx.strokeStyle = currentColor;\r\n    ctx.lineWidth = currentSize;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.stroke();\r\n  };\r\n\r\n  const stopDrawing = (e) => {\r\n    e.preventDefault();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  const colors = ['#2563eb', '#dc2626', '#16a34a', '#ca8a04', '#9333ea', '#c2410c'];\r\n\r\n  const StarIcon = () => (\r\n    <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n    </svg>\r\n  );\r\n\r\n  const HeartIcon = () => (\r\n    <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path fillRule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clipRule=\"evenodd\" />\r\n    </svg>\r\n  );\r\n\r\n  const CheckIcon = () => (\r\n    <svg className=\"w-16 h-16\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n    </svg>\r\n  );\r\n\r\n  const XIcon = () => (\r\n    <svg className=\"w-16 h-16\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n    </svg>\r\n  );\r\n\r\n  const TrophyIcon = () => (\r\n    <svg className=\"w-16 h-16\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n      <path d=\"M2 6a2 2 0 012-2h5l2 2h5a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V6zM4 8a2 2 0 012-2h8a2 2 0 012 2v4a2 2 0 01-2 2H6a2 2 0 01-2-2V8z\" />\r\n    </svg>\r\n  );\r\n\r\n  const WhiteboardIcon = () => (\r\n    <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M3 3h18a1 1 0 011 1v12a1 1 0 01-1 1H3a1 1 0 01-1-1V4a1 1 0 011-1zm1 2v10h16V5H4zm2 2h12v2H6V7zm0 3h8v2H6v-2z\"/>\r\n      <path d=\"M12 19l-2-2h4l-2 2z\"/>\r\n    </svg>\r\n  );\r\n\r\n  if (!lesson) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-400 via-pink-400 to-orange-400 flex items-center justify-center\">\r\n        <div className=\"bg-white rounded-3xl p-8 shadow-2xl\">\r\n          <div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-purple-500 mx-auto\"></div>\r\n          <p className=\"text-center mt-4 text-gray-600 font-medium\">Cargando tu aventura matemática...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500 relative overflow-hidden\">\r\n      <div className=\"absolute top-10 left-10 w-20 h-20 bg-yellow-300 rounded-full opacity-70 animate-bounce\"></div>\r\n      <div className=\"absolute top-32 right-16 w-12 h-12 bg-pink-300 rounded-full opacity-60 animate-pulse\"></div>\r\n      <div className=\"absolute bottom-20 left-20 w-8 h-8 bg-green-300 rounded-full opacity-80 animate-bounce delay-300\"></div>\r\n      <div className=\"absolute bottom-40 right-32 w-16 h-16 bg-orange-300 rounded-full opacity-50 animate-pulse delay-700\"></div>\r\n\r\n      <div className=\"container mx-auto px-4 py-8 relative z-10\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-4xl font-bold text-white mb-2 drop-shadow-lg\">\r\n            {lesson.title}\r\n          </h1>\r\n          <div className=\"flex items-center justify-center space-x-6\">\r\n            <div className=\"flex items-center bg-yellow-400 rounded-full px-4 py-2 shadow-lg\">\r\n              <StarIcon />\r\n              <span className=\"ml-2 font-bold text-yellow-900\">{xp} XP</span>\r\n            </div>\r\n            <div className=\"flex items-center bg-red-400 rounded-full px-4 py-2 shadow-lg\">\r\n              <HeartIcon />\r\n              <span className=\"ml-2 font-bold text-red-900\">3</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-md mx-auto mb-8\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <span className=\"text-white font-medium\">Progreso</span>\r\n            <span className=\"text-white font-bold\">{currentExerciseIndex}/{lesson.exercises?.length || 0}</span>\r\n          </div>\r\n          <div className=\"w-full bg-white bg-opacity-30 rounded-full h-4 overflow-hidden\">\r\n            <div \r\n              className=\"bg-gradient-to-r from-green-400 to-green-600 h-4 rounded-full transition-all duration-500 ease-out relative\"\r\n              style={{ width: `${progressValue}%` }}\r\n            >\r\n              <div className=\"absolute inset-0 bg-white bg-opacity-20 animate-pulse\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          {currentExercise ? (\r\n            <div className=\"bg-white rounded-3xl shadow-2xl overflow-hidden transform hover:scale-105 transition-transform duration-300\">\r\n              <div className=\"bg-gradient-to-r from-indigo-500 to-purple-600 p-6 text-white\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm opacity-90 mb-2\">{lesson.instruction}</p>\r\n                    <h2 className=\"text-2xl font-bold\">{currentExercise.question_text}</h2>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => setShowWhiteboard(true)}\r\n                    className=\"bg-white bg-opacity-20 hover:bg-opacity-30 p-3 rounded-2xl transition-all duration-200 flex items-center space-x-2\"\r\n                    title=\"Abrir pizarra para calcular\"\r\n                  >\r\n                    <WhiteboardIcon />\r\n                    <span className=\"hidden md:inline text-sm font-medium\">Pizarra</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"p-8\">\r\n                {currentExercise.answer_type === 'input' ? (\r\n                  <div className=\"space-y-6\">\r\n                    <div className=\"relative\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={userAnswer}\r\n                        onChange={(e) => setUserAnswer(e.target.value)}\r\n                        className=\"w-full text-2xl text-center py-4 px-6 border-4 border-purple-200 rounded-2xl focus:border-purple-500 focus:outline-none transition-colors duration-300\"\r\n                        placeholder=\"Escribe tu respuesta...\"\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSubmit()}\r\n                      />\r\n                    </div>\r\n                    <button\r\n                      onClick={handleSubmit}\r\n                      disabled={!userAnswer.trim()}\r\n                      className=\"w-full bg-gradient-to-r from-green-400 to-green-600 hover:from-green-500 hover:to-green-700 disabled:from-gray-300 disabled:to-gray-400 text-white font-bold py-4 px-8 rounded-2xl text-xl transform hover:scale-105 active:scale-95 transition-all duration-200 shadow-lg disabled:cursor-not-allowed\"\r\n                    >\r\n                      ¡Enviar Respuesta!\r\n                    </button>\r\n                  </div>\r\n                ) : currentExercise.answer_type === 'multiple_choice' && currentExercise.options ? (\r\n                  <div className=\"grid gap-4\">\r\n                    {currentExercise.options.map((opt, i) => (\r\n                      <button\r\n                        key={i}\r\n                        onClick={() => handleChoiceClick(opt)}\r\n                        className=\"bg-gradient-to-r from-blue-100 to-purple-100 hover:from-blue-200 hover:to-purple-200 border-2 border-blue-200 hover:border-purple-300 text-xl font-semibold py-4 px-6 rounded-2xl transform hover:scale-105 active:scale-95 transition-all duration-200 text-gray-700\"\r\n                      >\r\n                        {opt}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8\">\r\n                    <p className=\"text-gray-500 text-lg\">Tipo de pregunta no soportado</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center\">\r\n              <div className=\"bg-white rounded-3xl shadow-2xl p-12 transform hover:scale-105 transition-transform duration-300\">\r\n                <div className=\"text-yellow-500 mb-6\">\r\n                  <TrophyIcon />\r\n                </div>\r\n                <h2 className=\"text-4xl font-bold text-gray-800 mb-4\">¡Felicitaciones!</h2>\r\n                <p className=\"text-xl text-gray-600 mb-6\">Has completado toda la lección</p>\r\n                <div className=\"bg-gradient-to-r from-yellow-400 to-orange-500 text-white rounded-2xl p-6 inline-block\">\r\n                  <p className=\"text-2xl font-bold\">Ganaste {xp} puntos XP</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal de la Pizarra */}\r\n      {showWhiteboard && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-3xl shadow-2xl max-w-4xl w-full max-h-screen overflow-auto\">\r\n            <div className=\"bg-gradient-to-r from-green-400 to-blue-500 p-4 text-white rounded-t-3xl\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-2xl font-bold\">🎨 Pizarra Digital</h3>\r\n                <button\r\n                  onClick={() => setShowWhiteboard(false)}\r\n                  className=\"bg-white bg-opacity-20 hover:bg-opacity-30 p-2 rounded-full\"\r\n                >\r\n                  <XIcon />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"p-6\">\r\n              {/* Herramientas de la pizarra */}\r\n              <div className=\"flex items-center justify-between mb-4 flex-wrap gap-4\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"font-medium text-gray-700\">Colores:</span>\r\n                  <div className=\"flex space-x-2\">\r\n                    {colors.map(color => (\r\n                      <button\r\n                        key={color}\r\n                        onClick={() => setCurrentColor(color)}\r\n                        className={`w-8 h-8 rounded-full border-4 ${currentColor === color ? 'border-gray-800' : 'border-gray-300'} transition-all duration-200`}\r\n                        style={{ backgroundColor: color }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span className=\"font-medium text-gray-700\">Grosor:</span>\r\n                  <div className=\"flex space-x-2\">\r\n                    {[2, 4, 6, 8].map(size => (\r\n                      <button\r\n                        key={size}\r\n                        onClick={() => setCurrentSize(size)}\r\n                        className={`w-8 h-8 rounded-full ${currentSize === size ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} flex items-center justify-center font-bold text-sm transition-all duration-200`}\r\n                      >\r\n                        {size}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                \r\n                <button\r\n                  onClick={clearCanvas}\r\n                  className=\"bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-xl font-medium transition-colors duration-200\"\r\n                >\r\n                  🗑️ Borrar Todo\r\n                </button>\r\n              </div>\r\n\r\n              {/* Canvas de la pizarra */}\r\n              <div className=\"border-4 border-gray-300 rounded-2xl overflow-hidden bg-white\">\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  width={800}\r\n                  height={500}\r\n                  className=\"w-full touch-none cursor-crosshair\"\r\n                  onMouseDown={startDrawing}\r\n                  onMouseMove={draw}\r\n                  onMouseUp={stopDrawing}\r\n                  onMouseLeave={stopDrawing}\r\n                  onTouchStart={startDrawing}\r\n                  onTouchMove={draw}\r\n                  onTouchEnd={stopDrawing}\r\n                />\r\n              </div>\r\n              \r\n              <p className=\"text-center text-gray-500 mt-4 text-sm\">\r\n                💡 Usa esta pizarra para hacer tus cálculos y razonamientos matemáticos\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showFeedback && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className={`bg-white rounded-3xl p-12 text-center transform animate-bounce shadow-2xl ${isCorrect ? 'border-8 border-green-400' : 'border-8 border-red-400'}`}>\r\n            <div className={`${isCorrect ? 'text-green-500' : 'text-red-500'} mb-4`}>\r\n              {isCorrect ? <CheckIcon /> : <XIcon />}\r\n            </div>\r\n            <h3 className={`text-3xl font-bold mb-4 ${isCorrect ? 'text-green-600' : 'text-red-600'}`}>\r\n              {isCorrect ? '¡Excelente!' : '¡Inténtalo de nuevo!'}\r\n            </h3>\r\n            {isCorrect && currentExercise?.feedback && (\r\n              <p className=\"text-gray-600 text-lg\">{currentExercise.feedback}</p>\r\n            )}\r\n            {isCorrect && (\r\n              <div className=\"flex items-center justify-center mt-4 text-yellow-600\">\r\n                <StarIcon />\r\n                <span className=\"ml-2 font-bold text-xl\">+{lesson.xp_value} XP</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MathLessonModule;","import{\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n} from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch =>{\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: {msg, alertType}\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), timeout);\r\n}","import axios from 'axios';\r\nimport {\r\n  GET_LESSONS_SUCCESS,\r\n  GET_LESSONS_FAIL,\r\n  CREATE_LESSON_SUCCESS,\r\n  CREATE_LESSON_FAIL,\r\n  UPDATE_LESSON_SUCCESS,\r\n  UPDATE_LESSON_FAIL,\r\n  DELETE_LESSON_SUCCESS,\r\n  DELETE_LESSON_FAIL\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/api/lessons/`;\r\n\r\nexport const getLessons = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get(API_URL);\r\n    dispatch({\r\n      type: GET_LESSONS_SUCCESS,\r\n      payload: res.data.results\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: GET_LESSONS_FAIL });\r\n    dispatch(setAlert('Error cargando lecciones', 'red'));\r\n  }\r\n};\r\n\r\nexport const createLesson = (formData) => async dispatch => {\r\n  const token = localStorage.getItem('access');\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `JWT ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(API_URL, formData, config);\r\n    dispatch({\r\n      type: CREATE_LESSON_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert('Lección creada con éxito', 'green'));\r\n  } catch (err) {\r\n    dispatch({ type: CREATE_LESSON_FAIL });\r\n    dispatch(setAlert('Error al crear la lección', 'red'));\r\n  }\r\n};\r\n\r\nexport const updateLesson = (id, formData) => async dispatch => {\r\n  const token = localStorage.getItem('access');\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `JWT ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.put(`${API_URL}${id}/`, formData, config);\r\n    dispatch({\r\n      type: UPDATE_LESSON_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(setAlert('Lección actualizada', 'green'));\r\n  } catch (err) {\r\n    dispatch({ type: UPDATE_LESSON_FAIL });\r\n    dispatch(setAlert('Error al actualizar la lección', 'red'));\r\n  }\r\n};\r\n\r\nexport const deleteLesson = (id) => async dispatch => {\r\n  const token = localStorage.getItem('access');\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `JWT ${token}`\r\n    }\r\n  };\r\n\r\n  try {\r\n    await axios.delete(`${API_URL}${id}/`, config);\r\n    dispatch({\r\n      type: DELETE_LESSON_SUCCESS,\r\n      payload: id\r\n    });\r\n    dispatch(setAlert('Lección eliminada', 'green'));\r\n  } catch (err) {\r\n    dispatch({ type: DELETE_LESSON_FAIL });\r\n    dispatch(setAlert('Error al eliminar la lección', 'red'));\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  GET_PROGRESS_SUCCESS,\r\n  GET_PROGRESS_FAIL,\r\n  UPDATE_PROGRESS_SUCCESS,\r\n  UPDATE_PROGRESS_FAIL\r\n} from './types';\r\n\r\nimport { setAlert } from './alert';\r\n\r\nconst API_URL = `${process.env.REACT_APP_API_URL}/api/progress/`;\r\n\r\nexport const getProgress = () => async dispatch => {\r\n  const token = localStorage.getItem('access');\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `JWT ${token}`\r\n    }\r\n  };\r\n\r\n  try {\r\n    const res = await axios.get(API_URL, config);\r\n    dispatch({\r\n      type: GET_PROGRESS_SUCCESS,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: GET_PROGRESS_FAIL });\r\n    dispatch(setAlert('Error al cargar progreso', 'red'));\r\n  }\r\n};\r\n\r\nexport const createOrUpdateProgress = (lessonId, data) => async (dispatch, getState) => {\r\n  const token = localStorage.getItem('access');\r\n  const config = {\r\n    headers: {\r\n      'Authorization': `JWT ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const state = getState();\r\n  const rawProgress = state.Progress?.progress;\r\n  const progressList = Array.isArray(rawProgress)\r\n    ? rawProgress\r\n    : rawProgress?.results || [];\r\n\r\n  let existing = progressList.find(p => p.lesson === lessonId);\r\n\r\n  try {\r\n    if (!existing) {\r\n      const res = await axios.get(`${API_URL}`, config);\r\n      const updatedList = Array.isArray(res.data) ? res.data : [];  \r\n      existing = updatedList.find(p => p.lesson === lessonId);\r\n\r\n    }\r\n\r\n    if (existing) {\r\n      const res = await axios.put(`${API_URL}${existing.id}/`, data, config);\r\n      dispatch({\r\n        type: UPDATE_PROGRESS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    } else {\r\n      const res = await axios.post(API_URL, { lesson: lessonId, ...data }, config);\r\n      dispatch({\r\n        type: UPDATE_PROGRESS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    }\r\n  } catch (err) {\r\n    dispatch({ type: UPDATE_PROGRESS_FAIL });\r\n    dispatch(setAlert('Error al guardar progreso', 'red'));\r\n  }\r\n};\r\n\r\n\r\n"],"names":["MathLessonModule","_lesson$exercises","_lesson$exercises2","_lesson$exercises3","dispatch","useDispatch","id","useParams","lessons","useSelector","state","Lessons","progress","Progress","lesson","setLesson","useState","currentExerciseIndex","setCurrentExerciseIndex","xp","setXp","userAnswer","setUserAnswer","progressSaved","setProgressSaved","showFeedback","setShowFeedback","isCorrect","setIsCorrect","totalAttempts","setTotalAttempts","correctAnswers","setCorrectAnswers","showWhiteboard","setShowWhiteboard","canvasRef","useRef","isDrawing","setIsDrawing","currentColor","setCurrentColor","currentSize","setCurrentSize","useEffect","getLessons","selected","find","l","course","parseInt","currentExercise","exercises","handleSubmit","trim","prev","correct","correct_answer","xp_value","setTimeout","progressValue","length","Math","round","now","Date","toISOString","accuracy","createOrUpdateProgress","completed","earned_xp","retries","timestamp","getCoordinates","e","canvas","current","rect","getBoundingClientRect","scaleX","width","scaleY","height","touches","x","clientX","left","y","clientY","top","startDrawing","preventDefault","coords","ctx","getContext","beginPath","moveTo","draw","lineTo","strokeStyle","lineWidth","lineCap","lineJoin","stroke","stopDrawing","StarIcon","_jsx","className","fill","viewBox","children","d","HeartIcon","fillRule","clipRule","CheckIcon","XIcon","TrophyIcon","WhiteboardIcon","_jsxs","title","style","instruction","question_text","onClick","answer_type","type","value","onChange","target","placeholder","onKeyPress","key","disabled","options","map","opt","i","handleChoiceClick","color","backgroundColor","size","clearCanvas","clearRect","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","feedback","setAlert","msg","alertType","timeout","arguments","undefined","SET_ALERT","payload","REMOVE_ALERT","API_URL","async","res","axios","get","GET_LESSONS_SUCCESS","data","results","err","GET_LESSONS_FAIL","getProgress","config","headers","localStorage","getItem","GET_PROGRESS_SUCCESS","GET_PROGRESS_FAIL","lessonId","getState","_state$Progress","rawProgress","existing","Array","isArray","p","put","UPDATE_PROGRESS_SUCCESS","post","UPDATE_PROGRESS_FAIL"],"sourceRoot":""}